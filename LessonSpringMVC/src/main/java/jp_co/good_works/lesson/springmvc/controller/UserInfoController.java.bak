package jp_co.good_works.lesson.springmvc.controller;

import java.util.ArrayList;
import java.util.List;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import jp_co.good_works.lesson.springmvc.form.UserInfoForm;

@Controller
@Scope("session")
public class UserInfoController {

	 List<UserInfoForm> userinfoList = new ArrayList<UserInfoForm>();
	
	@RequestMapping(value ="/userinfo", method = RequestMethod.GET)
	public String userInfo(Model model) {
		UserInfoForm form = new UserInfoForm();
		//性別のラジオボタンの中身を作成
		//.add（）で内容をリストに追加できる
		List<String> genders = new ArrayList<String>();
		genders.add("男");
		genders.add("女");
		//jspにある${}と関連付けている
		model.addAttribute("genders",genders);
		
		//出身地のプルダウンを作成
		List<String> birthplace = new ArrayList<String>();
		//　初期表示だと何も選択していない状態になるため、敢えて空欄にしている
		//.add（）で内容をリストに追加できる
		birthplace.add("");
		birthplace.add("北海道1");
		birthplace.add("北海道2");
		birthplace.add("北海道3");
		birthplace.add("北海道4");
		birthplace.add("北海道5");
		birthplace.add("北海道6");
		//jspにある${}と関連付けている
		model.addAttribute("birthplace",birthplace);
		
		//言語のチェックボックスの中身を作成
		//.add（）で内容をリストに追加できる
		List<String> langs = new ArrayList<String>();
		langs.add("JAVA");
		langs.add("PHP");
		langs.add("Ruby");
		//jspにある${}と関連付けている
		model.addAttribute("langs",langs);

		
		model.addAttribute("message", "商品情報を入力してください");
		model.addAttribute("UserInfoForm", form);
		return "userinfo";
	}
	
	
	
	@RequestMapping(value ="/userinfo", method = RequestMethod.POST)
	//　バリデーションチェック
	public String userinfo(Model model, @Validated @ModelAttribute UserInfoForm form, BindingResult result)  {
		if(result.hasErrors()) {
			System.out.println("えらぽよ");
			model.addAttribute("message", "エラーがあります");				
		}else {
			model.addAttribute("message", "商品情報が入力されました");
			userinfoList.add(form);
		}
		
		//GETされた後に表示される性別のラジオボタンの中身を作成
		//.add（）で内容をリストに追加できる
		List<String> genders = new ArrayList<String>();
		genders.add("男");
		genders.add("女");
		//jspにある${}と関連付けている
		model.addAttribute("genders",genders);
		
		//GETされた後に表示される出身地のプルダウンを作成
		//.add（）で内容をリストに追加できる
		List<String> birthplace = new ArrayList<String>();
		birthplace.add("");
		birthplace.add("北海道1");
		birthplace.add("北海道2");
		birthplace.add("北海道3");
		birthplace.add("北海道4");
		birthplace.add("北海道5");
		birthplace.add("北海道6");
		//jspにある${}と関連付けている
		model.addAttribute("birthplace",birthplace);
		
		//GETされた後に表示される言語のチェックボックスの中身を作成
		//.add（）で内容をリストに追加できる
		List<String> langs = new ArrayList<String>();
		langs.add("JAVA");
		langs.add("PHP");
		langs.add("Ruby");
		//jspにある${}と関連付けている
		model.addAttribute("langs",langs);
		
		//バリデーションチェック

		model.addAttribute("UserInfoForm", form);
		model.addAttribute("userinfoList",userinfoList);
		return "userinfo";
	}
}
